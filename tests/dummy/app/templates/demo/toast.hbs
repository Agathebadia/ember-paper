{{page-toolbar pageTitle="Toast" isDemo=true}}

{{#doc-content}}

  {{#paper-card}}
    {{#paper-toolbar}}
      {{#paper-toolbar-tools}}
        <h2>Basic Usage</h2>
        <span class="flex"></span>
        {{#paper-button onClick=(action "toggleSourceCode") iconButton=true}}
          {{paper-icon icon="code"}}
        {{/paper-button}}
      {{/paper-toolbar-tools}}
    {{/paper-toolbar}}

    <div class="doc-code-example {{if showSourceCode 'is-visible'}}">
      {{code-snippet name="toast.hbs"}}
    </div>

    <div class="doc-content-example">
      <div id="paper-dialog-demo"></div>
      {{#paper-card-content}}
        <p>Open a toast over the app's content. Press escape, swipe or timeout to close the toast.</p>

        <div class="layout-row layout-wrap">
          {{#paper-button raised=true primary=true onClick=(action "openToast")}}
            Open toast with accent button
          {{/paper-button}}

          {{#paper-button raised=true primary=true onClick=(action "openToastWithout")}}
            Open toast
          {{/paper-button}}
        </div>

        <h3>Options</h3>
        <div class="layout-row layout-wrap layout-xs-column layout-sm-column">

          <div class="flex">
            {{#paper-radio-group groupValue=positionX onChange=(action (mut positionX)) as |group|}}
              {{#group.radio value="left"}}Left{{/group.radio}}
              {{#group.radio value="right"}}Right{{/group.radio}}
            {{/paper-radio-group}}
          </div>
          <div class="flex">
            {{#paper-radio-group groupValue=positionY onChange=(action (mut positionY)) as |group|}}
              {{#group.radio value="top"}}Top{{/group.radio}}
              {{#group.radio value="bottom"}}Bottom{{/group.radio}}
            {{/paper-radio-group}}
          </div>
          <div class="flex">
            {{#paper-checkbox value=capsule onChange=(action (mut capsule))}}
              capsule
            {{/paper-checkbox}}
          </div>
          <div class="flex">
            {{#paper-checkbox value=swipeToClose  flex=true onChange=(action (mut swipeToClose))}}
              swipeToClose
            {{/paper-checkbox}}
          </div>
        </div>

        <h3>hideDelay</h3>
        <div class="layout layout-align-center-center slider-container">
          {{paper-icon "watch later"}}
          {{paper-slider class="flex" value=hideDelay max=6000 onChange=(action (mut hideDelay))}}
          {{paper-input type="number" value=hideDelay onChange=(action (mut hideDelay))}}
        </div>

        {{paper-api
          (p-section
            (p-row "parent" "jQuery object, element or selector" "Existing element where the modal and backdrop will be rendered")
            (p-row "swipeToClose" "boolean" "Causes swiping to trigger the `onClose` handler. Defaults to `false`.")
            (p-row "hideDelay" "number or `false`" "Timeout in milliseconds, set to false to disable timeout. Defaults to `3000`")
            (p-row "escapeToClose" "boolean" "Causes pressing escape to close the dialog. Defaults to `true`.")
            (p-row "position" "string" "Possible values are `bottom left`, `bottom right`, `top left` and `top right`")
            (p-row "capsule" "boolean" "Controls whether the capsule class is added to the toast.Defaults to `false`")
          )
          (p-section
            "Actions"
            (p-row "onClose" "action" "An action to be executed when the toast is closed, e.g. by pressing escape, swiping or timeout.")
          )
        }}

      {{/paper-card-content}}
    </div>

  {{/paper-card}}

  <span id="bottom-of-card"></span>

{{/doc-content}}

{{! BEGIN-SNIPPET toast }}
{{#if showToast}}
  {{#paper-toast hideDelay=hideDelay position=(concat positionY " " positionX) capsule=capsule swipeToClose=swipeToClose onClose=(action "closeToast") as |toast|}}
    {{#toast.text}}Hello{{/toast.text}}
    {{#paper-button accent=true onClick=(action "buttonAction")}}Undo{{/paper-button}}
  {{/paper-toast}}
{{/if}}

{{#if showToastWithout}}
  {{#paper-toast hideDelay=hideDelay position=(concat positionY " " positionX) capsule=capsule swipeToClose=swipeToClose onClose=(action "closeToastWithout") as |toast|}}
    {{#toast.text}}Hello{{/toast.text}}
  {{/paper-toast}}
{{/if}}
{{! END-SNIPPET }}
